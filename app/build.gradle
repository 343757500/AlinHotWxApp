apply plugin: 'com.android.application'
// 依赖插件脚本
//apply from: 'tinker-support.gradle'
apply plugin: 'org.greenrobot.greendao' //greendao
android {
    signingConfigs {
        config {
            keyAlias 'miku'
            keyPassword 'miku2016'
            storeFile file('D:/AlinHot/hsl_wx_apk/app/file/miku.jks')
            storePassword 'miku2016'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '27.0.3'

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId 'com.mikuwxc.autoreply'
        minSdkVersion 22
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"



        multiDexEnabled true
        multiDexKeepProguard file("tinkerMultidexKeep.pro")
        //keep specific classes using proguard syntax


        signingConfigs {
            release {
                storeFile file("file/miku.jks")
                storePassword "miku2016"
                keyAlias "miku"
                keyPassword "miku2016"
            }
            debug {
                storeFile file("file/miku.jks")
                storePassword "miku2016"
                keyAlias "miku"


                keyPassword "miku2016"
            }
        }

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "024b39e181fa9a902f3bf2ff", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

    }
    buildTypes {
        /*       debug {
                   //显示log
                   buildConfigField "boolean", "LOG_DEBUG", "true"
                   // 是否进行混淆
                   minifyEnabled false
                   //Zipalign优化
                   zipAlignEnabled true
                   // 混淆文件的位置
                   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                   //签名文件
                   signingConfig signingConfigs.release
               }

               release {
                   //不显示log
                   buildConfigField "boolean", "LOG_DEBUG", "false"
                   // 是否进行混淆
                   minifyEnabled false
                   //Zipalign优化
                   zipAlignEnabled true
                   // 混淆文件的位置
                   proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                   //签名文件
                   signingConfig signingConfigs.release
               }
       */
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs('libs/im/imso', 'libs/share/weiboso', 'libs')
        }
    }
    productFlavors {
    }

    dexOptions {

        javaMaxHeapSize "4g"//这里2g或者4g都可以

    }


    greendao {
        schemaVersion 1  //版本
        daoPackage 'com.mikuwxc.autoreply.greendao.gen' // 一般为app包名+生成文件的文件夹名
        targetGenDir 'src/main/java' //生成文件路径
    }



}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:23.4.0'
    implementation 'com.android.support:design:23.4.0'
    testImplementation 'junit:junit:4.12'
    implementation files('libs/bugly_2.4.0_imsdk_release.jar')
    implementation files('libs/imsdk.jar')
    implementation files('libs/imsdk_group_ext.jar')
    implementation files('libs/imsdk_msg_ext.jar')
    implementation files('libs/imsdk_sns_ext.jar')
    implementation files('libs/mobilepb.jar')
    implementation files('libs/qalsdk.jar')
    implementation files('libs/soload.jar')
    implementation files('libs/tls_sdk.jar')
    implementation files('libs/wup-1.0.0-SNAPSHOT.jar')
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton:butterknife:7.0.1'
    // 依赖注入框架
    implementation 'com.lzy.net:okgo:2.1.4'
    //网络框架
    implementation 'com.google.code.gson:gson:2.8.2'
    //BaseQuickAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    // 解析json工具
    implementation 'de.greenrobot:eventbus:3.0.0-beta1'
    // 事件发布/订阅轻量级框架
    /* compileOnly files('lib/XposedBridgeApi-54.jar')*/
    implementation files('libs/wtoolsdk.jar')
    implementation 'cn.jiguang.sdk:jpush:3.1.2'
    // 此处以JPush 3.1.1 版本为例。
    implementation 'cn.jiguang.sdk:jcore:1.2.0'
    // 此处以JCore 1.1.9 版本为例。
    implementation files('libs/fastjson-1.1.34.jar')
    implementation 'org.greenrobot:eventbus:3.0.0'
    //又拍云存储sdk
    implementation 'com.upyun:upyun-android-sdk:2.0.6'
    dependencies {
        implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    }
    implementation files('libs/library-1.0.19.jar')
    implementation files('libs/universal-image-loader-1.9.5.jar')
    implementation files('libs/activeandroid-3.1-beta.jar')
    implementation files('libs/fastjson-1.1.34.jar')
    compileOnly files('lib/XposedBridgeApi-54.jar')
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.0.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'
    implementation files('libs/dom4j-1.6.1.jar')
    implementation files('libs/commons-lang3-3.7.jar')
    implementation files('libs/core-3.3.3.jar')
    implementation 'com.orhanobut:logger:2.2.0'
    // implementation 'com.alibaba:fastjson:1.2.47'
    implementation files('libs/jave-1.0.2.jar')
    //破解微信数据库需要用到
    implementation 'net.zetetic:android-database-sqlcipher:3.5.9@aar'
    //腾讯热更新
    implementation 'com.android.support:multidex:1.0.3'
    //若使用annotation需要单独引用,对于tinker的其他库都无需再引用
/*
    annotationProcessor 'com.tinkerpatch.tinker:tinker-android-anno:1.9.8'
    compileOnly 'com.tinkerpatch.tinker:tinker-android-anno:1.9.8'
    implementation 'com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.8'
*/

   // implementation 'org.apache.commons:commons-lang3:3.3.2'


/*    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.6'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0*/

    implementation 'com.aliyun.ams:alicloud-android-hotfix:3.2.4'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    implementation 'org.greenrobot:greendao:3.2.0'

}


